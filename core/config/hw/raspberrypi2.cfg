##########################################################
#Configuration file for the Raspberry Pi 2 Model B (RPi2)

#These are correct in their terminology, but all the files need to be created.
SRC_DIRS += hw/cpu/arm/armv7a hw/cpu/arm/arm_common hw/board/raspberrypi2 hw/soc/bcm2836
ASM_DIRS += hw/cpu/arm/armv7a hw/cpu/arm/arm_common hw/board/raspberrypi2 hw/soc/bcm2836
INC_DIRS += hw/cpu/arm/armv7a hw/cpu/arm/arm_common hw/board/raspberrypi2 hw/soc/bcm2836

#The linker script (specific to RPi2).
LSCRIPT = hw/ld/raspberrypi2.ld 

#The initial physical address of the memory.
#TODO: The initial physical address of the memory is 0x0. The initial bus address of the memory is 0xC0000000.
HAL_PHYS_START = 0x0
#The size of the physical memory (in bytes).
#The RPi2 has 1 GiB of physical memory. So, we simply calculate 1024*1024 and
#convert it to hexadecimal.
#TODO: Should we subtract the memory reserved for the GPU here? This is done in start.elf, so...
HAL_PHYS_SIZE = 0x40000000

#Here, we set ARM_ARCH to 7, since the processor architecture of the RPi2 is
#ARMv7-A.
USER_DEFS += ARM_ARCH=7
#TODO: I can't honestly say I have any idea what this line does.
#If this is the architecture name of the board that you can supply to Linux, then
USER_DEFS += LINUX_ARCH_ID=0xc42

#TODO: Make guest operating systems for this board.
#GUESTS += ../guests/linux/zImageRPi2

#TODO: Simulator, must be built separately... Check flags
# SIMULATOR= ../simulation/generic_a8/platform.exe
#QEMU = qemu-system-arm -M beaglexm -m 512

